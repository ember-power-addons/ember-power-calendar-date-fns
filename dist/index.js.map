{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  addSeconds,\n  addMinutes,\n  addHours,\n  addDays,\n  addMonths,\n  format as formatFns,\n  startOfDay,\n  startOfMonth,\n  startOfISOWeek,\n  startOfWeek as _startOfWeek,\n  endOfMonth,\n  endOfWeek as _endOfWeek,\n  endOfISOWeek,\n  endOfDay,\n  getDay,\n  getISODay,\n  eachDayOfInterval,\n  isAfter,\n  isBefore,\n  isSameDay,\n  isSameMonth,\n  isSameYear,\n  differenceInMilliseconds,\n  addWeeks,\n  getDefaultOptions,\n  setDefaultOptions,\n  type Locale,\n} from 'date-fns';\nimport type {\n  NormalizeCalendarValue,\n  NormalizeMultipleActionValue,\n  NormalizeRangeActionValue,\n  PowerCalendarDay,\n} from 'ember-power-calendar/utils';\n\nexport default {\n  add,\n  formatDate,\n  startOf,\n  endOf,\n  weekday,\n  isoWeekday,\n  getWeekdaysShort,\n  getWeekdaysMin,\n  getWeekdays,\n  isAfter,\n  isBefore,\n  isSame,\n  isBetween,\n  diff,\n  normalizeDate,\n  normalizeRangeActionValue,\n  normalizeMultipleActionValue,\n  normalizeCalendarDay,\n  withLocale,\n  normalizeCalendarValue,\n  normalizeDuration,\n  getDefaultLocale,\n  localeStartOfWeek,\n  startOfWeek,\n  endOfWeek,\n};\n\nconst registeredLocales: Record<string, Locale> = {};\n\n// lookup table for faster conversion\n// power-calendar format -> date-fns format (see https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table)\nconst knownFormats: {\n  [key: string]: string;\n} = {\n  'YYYY-MM-DD': 'yyyy-MM-dd',\n  'MMMM YYYY': 'MMMM yyyy',\n  MMMM: 'MMMM',\n  YYYY: 'yyyy',\n};\n\nfunction normalizeDateFormat(formatString: string): string {\n  if (knownFormats[formatString]) return knownFormats[formatString];\n\n  // In other cases, we just pass the format as we don't know if the developer used the unicode tokens or not.\n  // This might be misleading but we can't transform them by default to avoid breaking developer intentions.\n  return formatString;\n}\n\nexport function registerLocale(locale: Locale) {\n  registeredLocales[locale.code] = locale;\n}\n\nfunction getLocale(locale: string): Locale {\n  const dateFnsLocale = registeredLocales[locale];\n  if (!dateFnsLocale) {\n    throw new Error(\n      `Locale ${locale} was not registered in ember-power-calendar-date-fns!`,\n    );\n  }\n\n  return dateFnsLocale;\n}\n\nexport function add(date: Date, quantity: number, unit: string): Date {\n  switch (unit) {\n    case 'second':\n    case 'seconds':\n      return addSeconds(date, quantity);\n    case 'minute':\n    case 'minutes':\n      return addMinutes(date, quantity);\n    case 'hour':\n    case 'hours':\n      return addHours(date, quantity);\n    case 'day':\n    case 'days':\n      return addDays(date, quantity);\n    case 'month':\n    case 'months':\n      return addMonths(date, quantity);\n    default:\n      throw new Error(`add: Unit not supported! ${unit}`);\n  }\n}\n\nexport function formatDate(\n  date: Date,\n  format: string,\n  locale: string | null = null,\n): string {\n  const normalizedFormat = normalizeDateFormat(format);\n  if (locale) {\n    return withLocale(locale, () =>\n      formatFns(date, normalizedFormat),\n    ) as string;\n  } else {\n    return formatFns(date, normalizedFormat);\n  }\n}\n\nexport function startOf(date: Date, unit: string): Date {\n  switch (unit) {\n    case 'day':\n      return startOfDay(date);\n    case 'month':\n      return startOfMonth(date);\n    case 'week':\n      return _startOfWeek(date);\n    case 'isoWeek':\n      return startOfISOWeek(date);\n    default:\n      throw new Error(`startOf: Unit not supported! ${unit}`);\n  }\n}\n\nexport function endOf(date: Date, unit: string): Date {\n  switch (unit) {\n    case 'day':\n      return endOfDay(date);\n    case 'month':\n      return endOfMonth(date);\n    case 'week':\n      return _endOfWeek(date);\n    case 'isoWeek':\n      return endOfISOWeek(date);\n    default:\n      throw new Error(`endOf: Unit not supported! ${unit}`);\n  }\n}\n\nexport function weekday(date: Date): number {\n  return getDay(date);\n}\n\nexport function isoWeekday(date: Date): number {\n  return getISODay(date);\n}\n\nexport function getWeekdaysShort(): string[] {\n  const weekStart = new Date(1970, 0, 4);\n  const weekEnd = new Date(1970, 0, 10);\n\n  return eachDayOfInterval({ start: weekStart, end: weekEnd }).map(\n    (date) => formatFns(date, 'EEE'), // Mon, Tue, Wed, ..., Sun\n  );\n}\n\nexport function getWeekdaysMin(): string[] {\n  const weekStart = new Date(1970, 0, 4);\n  const weekEnd = new Date(1970, 0, 10);\n\n  return eachDayOfInterval({ start: weekStart, end: weekEnd }).map(\n    (date) => formatFns(date, 'EEEEEE'), // Mo, Tu, We, Th, Fr, Sa, Su\n  );\n}\n\nexport function getWeekdays(): string[] {\n  const weekStart = new Date(1970, 0, 4);\n  const weekEnd = new Date(1970, 0, 10);\n\n  return eachDayOfInterval({ start: weekStart, end: weekEnd }).map(\n    (date) => formatFns(date, 'EEEE'), // Monday, Tuesday, ..., Sunday\n  );\n}\n\n// export function isAfter(date1: Date, date2: Date): boolean {\n//   return moment(date1).isAfter(date2);\n// }\n\n// export function isBefore(date1: Date, date2: Date): boolean {\n//   return moment(date1).isBefore(date2);\n// }\n\nexport function isSame(date1: Date, date2: Date, unit: string): boolean {\n  switch (unit) {\n    case 'day':\n      return isSameDay(date1, date2);\n    case 'month':\n      return isSameMonth(date1, date2);\n    case 'year':\n      return isSameYear(date1, date2);\n    default:\n      throw new Error(`isSame: Unit not supported! ${unit}`);\n  }\n}\n\nexport function isBetween(\n  date: Date,\n  start: Date,\n  end: Date,\n  // unit?: string,\n  // inclusivity?: string,\n): boolean {\n  return +start <= +date && +date <= +end;\n}\n\nexport function diff(date1: Date, date2: Date): number {\n  return differenceInMilliseconds(date1, date2);\n}\n\nexport function normalizeDate(dateOrMoment?: unknown): Date | undefined {\n  if (dateOrMoment instanceof Date) {\n    return dateOrMoment;\n  }\n}\n\nexport function normalizeRangeActionValue(val: {\n  date: {\n    start?: Date | null;\n    end?: Date | null;\n  };\n}): NormalizeRangeActionValue {\n  return {\n    date: val.date,\n  };\n}\n\nexport function normalizeMultipleActionValue(val: {\n  date: Date[];\n}): NormalizeMultipleActionValue {\n  return {\n    date: val.date,\n  };\n}\n\nexport function normalizeCalendarDay(day: PowerCalendarDay): PowerCalendarDay {\n  // Nothing todo... we are working only with Date objects\n  return day;\n}\n\nexport function withLocale(locale: string, fn: () => unknown): unknown {\n  let returnValue;\n  if (locale) {\n    const defaultOptions = getDefaultOptions();\n    const currentLocale = defaultOptions.locale;\n    setDefaultOptions({ locale: getLocale(locale) });\n    returnValue = fn();\n    setDefaultOptions({ locale: currentLocale });\n  } else {\n    returnValue = fn();\n  }\n  return returnValue;\n}\n\nexport function normalizeCalendarValue(value: {\n  date: Date;\n}): NormalizeCalendarValue {\n  if (value) {\n    return {\n      date: value.date,\n    };\n  }\n  return { date: undefined };\n}\n\nexport function normalizeDuration(value: unknown): number | null | undefined {\n  if (value === null) {\n    return null;\n  }\n  if (value instanceof Date) {\n    return value.getTime();\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  if (typeof value === 'string') {\n    const matches = value.match(/(\\d+)(.*)/) ?? [];\n    const quantity = matches[1] ?? '';\n    const units = matches[2]?.trim() || 'days';\n\n    const quantityNumber = parseInt(quantity, 10);\n    const a = new Date();\n    let b;\n\n    switch (units) {\n      case 'days': {\n        b = addDays(a, quantityNumber);\n        break;\n      }\n      case 'w':\n      case 'week': {\n        b = addWeeks(a, quantityNumber);\n        break;\n      }\n      default:\n        throw new Error(`normalizeDuration: Unit not supported! ${units}`);\n    }\n\n    return diff(a, b);\n  }\n}\n\nexport function getDefaultLocale(): string {\n  const defaultOptions = getDefaultOptions();\n  const currentLocale = defaultOptions.locale;\n  return currentLocale?.code ?? '';\n}\n\nexport function localeStartOfWeek(locale: string): number {\n  const now = new Date();\n  const day = withLocale(locale, () => weekday(startOf(now, 'week'))) as number;\n  return day >= 0 ? day : 0;\n}\n\nexport function startOfWeek(day: Date, startOfWeek: number): Date {\n  while (isoWeekday(day) % 7 !== startOfWeek) {\n    day = add(day, -1, 'day');\n  }\n  return day;\n}\n\nexport function endOfWeek(day: Date, startOfWeek: number): Date {\n  const eow = (startOfWeek + 6) % 7;\n  while (isoWeekday(day) % 7 !== eow) {\n    day = add(day, 1, 'day');\n  }\n  return day;\n}\n"],"names":["add","formatDate","startOf","endOf","weekday","isoWeekday","getWeekdaysShort","getWeekdaysMin","getWeekdays","isAfter","isBefore","isSame","isBetween","diff","normalizeDate","normalizeRangeActionValue","normalizeMultipleActionValue","normalizeCalendarDay","withLocale","normalizeCalendarValue","normalizeDuration","getDefaultLocale","localeStartOfWeek","startOfWeek","endOfWeek","registeredLocales","knownFormats","MMMM","YYYY","normalizeDateFormat","formatString","registerLocale","locale","code","getLocale","dateFnsLocale","Error","date","quantity","unit","addSeconds","addMinutes","addHours","addDays","addMonths","format","normalizedFormat","formatFns","startOfDay","startOfMonth","_startOfWeek","startOfISOWeek","endOfDay","endOfMonth","_endOfWeek","endOfISOWeek","getDay","getISODay","weekStart","Date","weekEnd","eachDayOfInterval","start","end","map","date1","date2","isSameDay","isSameMonth","isSameYear","differenceInMilliseconds","dateOrMoment","val","day","fn","returnValue","defaultOptions","getDefaultOptions","currentLocale","setDefaultOptions","value","undefined","getTime","matches","match","units","trim","quantityNumber","parseInt","a","b","addWeeks","now","eow"],"mappings":";;AAoCA,YAAe;EACbA,GAAG;EACHC,UAAU;EACVC,OAAO;EACPC,KAAK;EACLC,OAAO;EACPC,UAAU;EACVC,gBAAgB;EAChBC,cAAc;EACdC,WAAW;EACXC,OAAO;EACPC,QAAQ;EACRC,MAAM;EACNC,SAAS;EACTC,IAAI;EACJC,aAAa;EACbC,yBAAyB;EACzBC,4BAA4B;EAC5BC,oBAAoB;EACpBC,UAAU;EACVC,sBAAsB;EACtBC,iBAAiB;EACjBC,gBAAgB;EAChBC,iBAAiB;EACjBC,WAAW;AACXC,EAAAA;AACF,CAAC;AAED,MAAMC,iBAAyC,GAAG,EAAE;;AAEpD;AACA;AACA,MAAMC,YAEL,GAAG;AACF,EAAA,YAAY,EAAE,YAAY;AAC1B,EAAA,WAAW,EAAE,WAAW;AACxBC,EAAAA,IAAI,EAAE,MAAM;AACZC,EAAAA,IAAI,EAAE;AACR,CAAC;AAED,SAASC,mBAAmBA,CAACC,YAAoB,EAAU;EACzD,IAAIJ,YAAY,CAACI,YAAY,CAAC,EAAE,OAAOJ,YAAY,CAACI,YAAY,CAAC;;AAEjE;AACA;AACA,EAAA,OAAOA,YAAY;AACrB;AAEO,SAASC,cAAcA,CAACC,MAAc,EAAE;AAC7CP,EAAAA,iBAAiB,CAACO,MAAM,CAACC,IAAI,CAAC,GAAGD,MAAM;AACzC;AAEA,SAASE,SAASA,CAACF,MAAc,EAAU;AACzC,EAAA,MAAMG,aAAa,GAAGV,iBAAiB,CAACO,MAAM,CAAC;EAC/C,IAAI,CAACG,aAAa,EAAE;AAClB,IAAA,MAAM,IAAIC,KAAK,CACb,CAAUJ,OAAAA,EAAAA,MAAM,uDAClB,CAAC;AACH;AAEA,EAAA,OAAOG,aAAa;AACtB;AAEO,SAASnC,GAAGA,CAACqC,IAAU,EAAEC,QAAgB,EAAEC,IAAY,EAAQ;AACpE,EAAA,QAAQA,IAAI;AACV,IAAA,KAAK,QAAQ;AACb,IAAA,KAAK,SAAS;AACZ,MAAA,OAAOC,UAAU,CAACH,IAAI,EAAEC,QAAQ,CAAC;AACnC,IAAA,KAAK,QAAQ;AACb,IAAA,KAAK,SAAS;AACZ,MAAA,OAAOG,UAAU,CAACJ,IAAI,EAAEC,QAAQ,CAAC;AACnC,IAAA,KAAK,MAAM;AACX,IAAA,KAAK,OAAO;AACV,MAAA,OAAOI,QAAQ,CAACL,IAAI,EAAEC,QAAQ,CAAC;AACjC,IAAA,KAAK,KAAK;AACV,IAAA,KAAK,MAAM;AACT,MAAA,OAAOK,OAAO,CAACN,IAAI,EAAEC,QAAQ,CAAC;AAChC,IAAA,KAAK,OAAO;AACZ,IAAA,KAAK,QAAQ;AACX,MAAA,OAAOM,SAAS,CAACP,IAAI,EAAEC,QAAQ,CAAC;AAClC,IAAA;AACE,MAAA,MAAM,IAAIF,KAAK,CAAC,CAA4BG,yBAAAA,EAAAA,IAAI,EAAE,CAAC;AACvD;AACF;AAEO,SAAStC,UAAUA,CACxBoC,IAAU,EACVQ,QAAc,EACdb,MAAqB,GAAG,IAAI,EACpB;AACR,EAAA,MAAMc,gBAAgB,GAAGjB,mBAAmB,CAACgB,QAAM,CAAC;AACpD,EAAA,IAAIb,MAAM,EAAE;IACV,OAAOd,UAAU,CAACc,MAAM,EAAE,MACxBe,MAAS,CAACV,IAAI,EAAES,gBAAgB,CAClC,CAAC;AACH,GAAC,MAAM;AACL,IAAA,OAAOC,MAAS,CAACV,IAAI,EAAES,gBAAgB,CAAC;AAC1C;AACF;AAEO,SAAS5C,OAAOA,CAACmC,IAAU,EAAEE,IAAY,EAAQ;AACtD,EAAA,QAAQA,IAAI;AACV,IAAA,KAAK,KAAK;MACR,OAAOS,UAAU,CAACX,IAAI,CAAC;AACzB,IAAA,KAAK,OAAO;MACV,OAAOY,YAAY,CAACZ,IAAI,CAAC;AAC3B,IAAA,KAAK,MAAM;MACT,OAAOa,aAAY,CAACb,IAAI,CAAC;AAC3B,IAAA,KAAK,SAAS;MACZ,OAAOc,cAAc,CAACd,IAAI,CAAC;AAC7B,IAAA;AACE,MAAA,MAAM,IAAID,KAAK,CAAC,CAAgCG,6BAAAA,EAAAA,IAAI,EAAE,CAAC;AAC3D;AACF;AAEO,SAASpC,KAAKA,CAACkC,IAAU,EAAEE,IAAY,EAAQ;AACpD,EAAA,QAAQA,IAAI;AACV,IAAA,KAAK,KAAK;MACR,OAAOa,QAAQ,CAACf,IAAI,CAAC;AACvB,IAAA,KAAK,OAAO;MACV,OAAOgB,UAAU,CAAChB,IAAI,CAAC;AACzB,IAAA,KAAK,MAAM;MACT,OAAOiB,WAAU,CAACjB,IAAI,CAAC;AACzB,IAAA,KAAK,SAAS;MACZ,OAAOkB,YAAY,CAAClB,IAAI,CAAC;AAC3B,IAAA;AACE,MAAA,MAAM,IAAID,KAAK,CAAC,CAA8BG,2BAAAA,EAAAA,IAAI,EAAE,CAAC;AACzD;AACF;AAEO,SAASnC,OAAOA,CAACiC,IAAU,EAAU;EAC1C,OAAOmB,MAAM,CAACnB,IAAI,CAAC;AACrB;AAEO,SAAShC,UAAUA,CAACgC,IAAU,EAAU;EAC7C,OAAOoB,SAAS,CAACpB,IAAI,CAAC;AACxB;AAEO,SAAS/B,gBAAgBA,GAAa;EAC3C,MAAMoD,SAAS,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EACtC,MAAMC,OAAO,GAAG,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAErC,EAAA,OAAOE,iBAAiB,CAAC;AAAEC,IAAAA,KAAK,EAAEJ,SAAS;AAAEK,IAAAA,GAAG,EAAEH;AAAQ,GAAC,CAAC,CAACI,GAAG,CAC7D3B,IAAI,IAAKU,MAAS,CAACV,IAAI,EAAE,KAAK,CAAC;GACjC;AACH;AAEO,SAAS9B,cAAcA,GAAa;EACzC,MAAMmD,SAAS,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EACtC,MAAMC,OAAO,GAAG,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAErC,EAAA,OAAOE,iBAAiB,CAAC;AAAEC,IAAAA,KAAK,EAAEJ,SAAS;AAAEK,IAAAA,GAAG,EAAEH;AAAQ,GAAC,CAAC,CAACI,GAAG,CAC7D3B,IAAI,IAAKU,MAAS,CAACV,IAAI,EAAE,QAAQ,CAAC;GACpC;AACH;AAEO,SAAS7B,WAAWA,GAAa;EACtC,MAAMkD,SAAS,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EACtC,MAAMC,OAAO,GAAG,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAErC,EAAA,OAAOE,iBAAiB,CAAC;AAAEC,IAAAA,KAAK,EAAEJ,SAAS;AAAEK,IAAAA,GAAG,EAAEH;AAAQ,GAAC,CAAC,CAACI,GAAG,CAC7D3B,IAAI,IAAKU,MAAS,CAACV,IAAI,EAAE,MAAM,CAAC;GAClC;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO,SAAS1B,MAAMA,CAACsD,KAAW,EAAEC,KAAW,EAAE3B,IAAY,EAAW;AACtE,EAAA,QAAQA,IAAI;AACV,IAAA,KAAK,KAAK;AACR,MAAA,OAAO4B,SAAS,CAACF,KAAK,EAAEC,KAAK,CAAC;AAChC,IAAA,KAAK,OAAO;AACV,MAAA,OAAOE,WAAW,CAACH,KAAK,EAAEC,KAAK,CAAC;AAClC,IAAA,KAAK,MAAM;AACT,MAAA,OAAOG,UAAU,CAACJ,KAAK,EAAEC,KAAK,CAAC;AACjC,IAAA;AACE,MAAA,MAAM,IAAI9B,KAAK,CAAC,CAA+BG,4BAAAA,EAAAA,IAAI,EAAE,CAAC;AAC1D;AACF;AAEO,SAAS3B,SAASA,CACvByB,IAAU,EACVyB,KAAW,EACXC;AACA;AACA;AAAA,EACS;EACT,OAAO,CAACD,KAAK,IAAI,CAACzB,IAAI,IAAI,CAACA,IAAI,IAAI,CAAC0B,GAAG;AACzC;AAEO,SAASlD,IAAIA,CAACoD,KAAW,EAAEC,KAAW,EAAU;AACrD,EAAA,OAAOI,wBAAwB,CAACL,KAAK,EAAEC,KAAK,CAAC;AAC/C;AAEO,SAASpD,aAAaA,CAACyD,YAAsB,EAAoB;EACtE,IAAIA,YAAY,YAAYZ,IAAI,EAAE;AAChC,IAAA,OAAOY,YAAY;AACrB;AACF;AAEO,SAASxD,yBAAyBA,CAACyD,GAKzC,EAA6B;EAC5B,OAAO;IACLnC,IAAI,EAAEmC,GAAG,CAACnC;GACX;AACH;AAEO,SAASrB,4BAA4BA,CAACwD,GAE5C,EAAgC;EAC/B,OAAO;IACLnC,IAAI,EAAEmC,GAAG,CAACnC;GACX;AACH;AAEO,SAASpB,oBAAoBA,CAACwD,GAAqB,EAAoB;AAC5E;AACA,EAAA,OAAOA,GAAG;AACZ;AAEO,SAASvD,UAAUA,CAACc,MAAc,EAAE0C,EAAiB,EAAW;AACrE,EAAA,IAAIC,WAAW;AACf,EAAA,IAAI3C,MAAM,EAAE;AACV,IAAA,MAAM4C,cAAc,GAAGC,iBAAiB,EAAE;AAC1C,IAAA,MAAMC,aAAa,GAAGF,cAAc,CAAC5C,MAAM;AAC3C+C,IAAAA,iBAAiB,CAAC;MAAE/C,MAAM,EAAEE,SAAS,CAACF,MAAM;AAAE,KAAC,CAAC;IAChD2C,WAAW,GAAGD,EAAE,EAAE;AAClBK,IAAAA,iBAAiB,CAAC;AAAE/C,MAAAA,MAAM,EAAE8C;AAAc,KAAC,CAAC;AAC9C,GAAC,MAAM;IACLH,WAAW,GAAGD,EAAE,EAAE;AACpB;AACA,EAAA,OAAOC,WAAW;AACpB;AAEO,SAASxD,sBAAsBA,CAAC6D,KAEtC,EAA0B;AACzB,EAAA,IAAIA,KAAK,EAAE;IACT,OAAO;MACL3C,IAAI,EAAE2C,KAAK,CAAC3C;KACb;AACH;EACA,OAAO;AAAEA,IAAAA,IAAI,EAAE4C;GAAW;AAC5B;AAEO,SAAS7D,iBAAiBA,CAAC4D,KAAc,EAA6B;EAC3E,IAAIA,KAAK,KAAK,IAAI,EAAE;AAClB,IAAA,OAAO,IAAI;AACb;EACA,IAAIA,KAAK,YAAYrB,IAAI,EAAE;AACzB,IAAA,OAAOqB,KAAK,CAACE,OAAO,EAAE;AACxB;AACA,EAAA,IAAI,OAAOF,KAAK,KAAK,QAAQ,EAAE;AAC7B,IAAA,OAAOA,KAAK;AACd;AACA,EAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAMG,OAAO,GAAGH,KAAK,CAACI,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE;AAC9C,IAAA,MAAM9C,QAAQ,GAAG6C,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE;IACjC,MAAME,KAAK,GAAGF,OAAO,CAAC,CAAC,CAAC,EAAEG,IAAI,EAAE,IAAI,MAAM;AAE1C,IAAA,MAAMC,cAAc,GAAGC,QAAQ,CAAClD,QAAQ,EAAE,EAAE,CAAC;AAC7C,IAAA,MAAMmD,CAAC,GAAG,IAAI9B,IAAI,EAAE;AACpB,IAAA,IAAI+B,CAAC;AAEL,IAAA,QAAQL,KAAK;AACX,MAAA,KAAK,MAAM;AAAE,QAAA;AACXK,UAAAA,CAAC,GAAG/C,OAAO,CAAC8C,CAAC,EAAEF,cAAc,CAAC;AAC9B,UAAA;AACF;AACA,MAAA,KAAK,GAAG;AACR,MAAA,KAAK,MAAM;AAAE,QAAA;AACXG,UAAAA,CAAC,GAAGC,QAAQ,CAACF,CAAC,EAAEF,cAAc,CAAC;AAC/B,UAAA;AACF;AACA,MAAA;AACE,QAAA,MAAM,IAAInD,KAAK,CAAC,CAA0CiD,uCAAAA,EAAAA,KAAK,EAAE,CAAC;AACtE;AAEA,IAAA,OAAOxE,IAAI,CAAC4E,CAAC,EAAEC,CAAC,CAAC;AACnB;AACF;AAEO,SAASrE,gBAAgBA,GAAW;AACzC,EAAA,MAAMuD,cAAc,GAAGC,iBAAiB,EAAE;AAC1C,EAAA,MAAMC,aAAa,GAAGF,cAAc,CAAC5C,MAAM;AAC3C,EAAA,OAAO8C,aAAa,EAAE7C,IAAI,IAAI,EAAE;AAClC;AAEO,SAASX,iBAAiBA,CAACU,MAAc,EAAU;AACxD,EAAA,MAAM4D,GAAG,GAAG,IAAIjC,IAAI,EAAE;AACtB,EAAA,MAAMc,GAAG,GAAGvD,UAAU,CAACc,MAAM,EAAE,MAAM5B,OAAO,CAACF,OAAO,CAAC0F,GAAG,EAAE,MAAM,CAAC,CAAC,CAAW;AAC7E,EAAA,OAAOnB,GAAG,IAAI,CAAC,GAAGA,GAAG,GAAG,CAAC;AAC3B;AAEO,SAASlD,WAAWA,CAACkD,GAAS,EAAElD,WAAmB,EAAQ;EAChE,OAAOlB,UAAU,CAACoE,GAAG,CAAC,GAAG,CAAC,KAAKlD,WAAW,EAAE;IAC1CkD,GAAG,GAAGzE,GAAG,CAACyE,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC;AAC3B;AACA,EAAA,OAAOA,GAAG;AACZ;AAEO,SAASjD,SAASA,CAACiD,GAAS,EAAElD,WAAmB,EAAQ;AAC9D,EAAA,MAAMsE,GAAG,GAAG,CAACtE,WAAW,GAAG,CAAC,IAAI,CAAC;EACjC,OAAOlB,UAAU,CAACoE,GAAG,CAAC,GAAG,CAAC,KAAKoB,GAAG,EAAE;IAClCpB,GAAG,GAAGzE,GAAG,CAACyE,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC;AAC1B;AACA,EAAA,OAAOA,GAAG;AACZ;;;;"}